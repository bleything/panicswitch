{
  "name": "Panic Switch",
  "tagline": "Control your Hue lights from Status Board",
  "body": "# Panic Switch\r\n\r\nEver thought to yourself \"dang, I wish I could control my light bulbs from\r\nPanic's Status Board app\"? Good news! Panic Switch is a widget for Panic's\r\n[Status Board] app that controls your [Philips Hue] lights.\r\n\r\n[Status Board]: https://panic.com/statusboard/\r\n[Philips Hue]: https://meethue.com\r\n\r\n### How Do?\r\n\r\nFirst we need to create the Panic Switch user on your Hue bridge. This is a\r\none-time operation that will not need to be repeated unless you replace or\r\nfactory reset your bridge.\r\n\r\n* Go to http://www.meethue.com/api/nupnp and note the IP address of your bridge\r\n* Go to http://BRIDGE_IP/debug/clip.html\r\n* Use the CLIP interface to `POST` the following JSON to `/api`:\r\n\r\n```json\r\n{\"devicetype\": \"Panic Switch\"}\r\n```\r\n\r\n* You should see an error saying `link button not pressed`. Push the link button\r\n  on your bridge and submit the `POST` again. You should see a success message\r\n  that includes a username:\r\n\r\n```json\r\n[\r\n  {\r\n    \"success\": {\r\n      \"username\": \"zg0uAT9k1PaZ3Q89ocQlJhDDLeBTtFDAMKdVhqaI\"\r\n    }\r\n  }\r\n]\r\n```\r\n\r\nNext, set up Status Board. Add a Do-It-Yourself widget and set the Panel URL to\r\nhttp://bleything.github.io/panicswitch/widget.html?username=your-username-from-before\r\n\r\nAll done!",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}